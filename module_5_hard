class User:
    def __init__(self, nickname, password, age):
        self.nickname = nickname
        self.password = hash(password)
        self.age = age
    def __repr__(self):
        return f"User(nickname='{self.nickname}', age={self.age})"
class Video:
    def __init__(self, title, duration, time_now=0, adult_mode=False):
        self.title = title
        self.duration = duration
        self.time_now = time_now
        self.adult_mode = adult_mode


import time


class UrTube:
    def __init__(self):
        self.users = []
        self.videos = []
        self.current_user = None

    # Метод для входа пользователя
    def log_in(self, nickname, password):
        for user in self.users:
            if user.nickname == nickname and user.password == hash(password):
                self.current_user = user
                return f"Пользователь {nickname} успешно вошел."
        return "Неверный логин или пароль."

    # Метод для регистрации нового пользователя
    def register(self, nickname, password, age):
        for user in self.users:
            if user.nickname == nickname:
                print(f"Пользователь {nickname} уже существует.")
                return

        new_user = User(nickname, password, age)
        self.users.append(new_user)
        self.log_in(nickname, password)

    # Метод выхода из аккаунта
    def log_out(self):
        self.current_user = None
        print("Вы вышли из аккаунта.")

    # Метод добавления новых видео
    def add(self, *videos):
        for video in videos:
            if not any(video.title == existing_video.title for existing_video in self.videos):
                self.videos.append(video)
            else:
                print(f"Видео '{video.title}' уже существует.")

    # Метод поиска видео по ключевому слову
    def get_videos(self, search_word):
        result = []
        search_word = search_word.lower()  # Приводим к нижнему регистру для нечувствительного поиска
        for video in self.videos:
            if search_word in video.title.lower():
                result.append(video.title)
        return result

    # Метод воспроизведения видео
    def watch_video(self, title):
        if not self.current_user:
            print("Войдите в аккаунт, чтобы смотреть видео")
            return

        found_video = next((video for video in self.videos if video.title == title), None)
        if not found_video:
            print(f"Видео '{title}' не найдено.")
            return

        if found_video.adult_mode and self.current_user.age < 18:
            print("Вам нет 18 лет, пожалуйста покиньте страницу")
            return

        print(f"Секунды воспроизведения: ", end="")
        while found_video.time_now < found_video.duration:
            print(found_video.time_now, end=", ")
            found_video.time_now += 1
            time.sleep(1)
        print("\nКонец видео")
        found_video.time_now = 0  # Сброс времени после окончания воспроизведения
ur = UrTube()
v1 = Video('Лучший язык программирования 2024 года', 200)
v2 = Video('Для чего девушкам парень программист?', 10, adult_mode=True)

# Добавление видео
ur.add(v1, v2)

# Проверка поиска
print(ur.get_videos('лучший'))
print(ur.get_videos('ПРОГ'))

# Проверка на вход пользователя и возрастное ограничение
ur.watch_video('Для чего девушкам парень программист?')
ur.register('vasya_pupkin', 'lolkekcheburek', 13)
ur.watch_video('Для чего девушкам парень программист?')
ur.register('urban_pythonist', 'iScX4vIJClb9YQavjAgF', 25)
ur.watch_video('Для чего девушкам парень программист?')

# Проверка входа в другой аккаунт
ur.register('vasya_pupkin', 'F8098FM8fjm9jmi', 55)
print(ur.current_user)

# Попытка воспроизведения несуществующего видео
ur.watch_video('Лучший язык программирования 2024 года!')
