from threading import Thread
from time import sleep

# Глобальная переменная для количества врагов
ENEMIES = 100


class Knight(Thread):
    def __init__(self, name, power):
        super().__init__()
        self.name = name
        self.power = power
        self.days = 0

    def run(self):
        global ENEMIES
        print(f"{self.name}, на нас напали!")
        while ENEMIES > 0:
            sleep(1)
            self.days += 1
            ENEMIES -= self.power
            ENEMIES = max(0, ENEMIES)  # Чтобы не уйти в отрицательные значения
            print(f"{self.name}, сражается {self.days} день(дня)..., осталось {ENEMIES} воинов.")

        print(f"{self.name} одержал победу спустя {self.days} день(дня)!")


# Создание и запуск рыцарей
first_knight = Knight('Sir Lancelot', 10)
second_knight = Knight('Sir Galahad', 20)

# Запуск потоков
first_knight.start()
second_knight.start()

# Ожидание завершения потоков
first_knight.join()
second_knight.join()

# Финальная строка
print("Все битвы закончились!")
